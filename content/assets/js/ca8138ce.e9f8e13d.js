"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[71551],{15680:(e,a,t)=>{t.d(a,{xA:()=>o,yg:()=>u});var n=t(96540);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function g(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=n.createContext({}),d=function(e){var a=n.useContext(p),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},o=function(e){var a=d(e.components);return n.createElement(p.Provider,{value:a},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var t=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,o=g(e,["components","mdxType","originalType","parentName"]),s=d(t),m=l,u=s["".concat(p,".").concat(m)]||s[m]||y[m]||r;return t?n.createElement(u,i(i({ref:a},o),{},{components:t})):n.createElement(u,i({ref:a},o))}));function u(e,a){var t=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var r=t.length,i=new Array(r);i[0]=m;var g={};for(var p in a)hasOwnProperty.call(a,p)&&(g[p]=a[p]);g.originalType=e,g[s]="string"==typeof e?e:l,i[1]=g;for(var d=2;d<r;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},84749:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>i,default:()=>y,frontMatter:()=>r,metadata:()=>g,toc:()=>d});var n=t(58168),l=(t(96540),t(15680));const r={id:"reference-connector-admin",title:"Connector Admin CLI",sidebar_label:"Connector Admin CLI",original_id:"reference-connector-admin"},i=void 0,g={unversionedId:"reference-connector-admin",id:"version-2.4.0/reference-connector-admin",title:"Connector Admin CLI",description:"Important",source:"@site/versioned_docs/version-2.4.0/reference-connector-admin.md",sourceDirName:".",slug:"/reference-connector-admin",permalink:"/docs/2.4.0/reference-connector-admin",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.4.0/reference-connector-admin.md",tags:[],version:"2.4.0",frontMatter:{id:"reference-connector-admin",title:"Connector Admin CLI",sidebar_label:"Connector Admin CLI",original_id:"reference-connector-admin"}},p={},d=[{value:"<code>sources</code>",id:"sources",level:2},{value:"<code>create</code>",id:"create",level:3},{value:"Usage",id:"usage",level:4},{value:"Options",id:"options",level:4},{value:"<code>update</code>",id:"update",level:3},{value:"Usage",id:"usage-1",level:4},{value:"Options",id:"options-1",level:4},{value:"<code>delete</code>",id:"delete",level:3},{value:"Usage",id:"usage-2",level:4},{value:"Option",id:"option",level:4},{value:"<code>get</code>",id:"get",level:3},{value:"Usage",id:"usage-3",level:4},{value:"Options",id:"options-2",level:4},{value:"<code>status</code>",id:"status",level:3},{value:"Usage",id:"usage-4",level:4},{value:"Options",id:"options-3",level:4},{value:"<code>list</code>",id:"list",level:3},{value:"Usage",id:"usage-5",level:4},{value:"Options",id:"options-4",level:4},{value:"<code>stop</code>",id:"stop",level:3},{value:"Usage",id:"usage-6",level:4},{value:"Options",id:"options-5",level:4},{value:"<code>start</code>",id:"start",level:3},{value:"Usage",id:"usage-7",level:4},{value:"Options",id:"options-6",level:4},{value:"<code>restart</code>",id:"restart",level:3},{value:"Usage",id:"usage-8",level:4},{value:"Options",id:"options-7",level:4},{value:"<code>localrun</code>",id:"localrun",level:3},{value:"Usage",id:"usage-9",level:4},{value:"Options",id:"options-8",level:4},{value:"<code>available-sources</code>",id:"available-sources",level:3},{value:"Usage",id:"usage-10",level:4},{value:"<code>reload</code>",id:"reload",level:3},{value:"Usage",id:"usage-11",level:4},{value:"<code>sinks</code>",id:"sinks",level:2},{value:"<code>create</code>",id:"create-1",level:3},{value:"Usage",id:"usage-12",level:4},{value:"Options",id:"options-9",level:4},{value:"<code>update</code>",id:"update-1",level:3},{value:"Usage",id:"usage-13",level:4},{value:"Options",id:"options-10",level:4},{value:"<code>delete</code>",id:"delete-1",level:3},{value:"Usage",id:"usage-14",level:4},{value:"Option",id:"option-1",level:4},{value:"<code>get</code>",id:"get-1",level:3},{value:"Usage",id:"usage-15",level:4},{value:"Options",id:"options-11",level:4},{value:"<code>status</code>",id:"status-1",level:3},{value:"Usage",id:"usage-16",level:4},{value:"Options",id:"options-12",level:4},{value:"<code>list</code>",id:"list-1",level:3},{value:"Usage",id:"usage-17",level:4},{value:"Options",id:"options-13",level:4},{value:"<code>stop</code>",id:"stop-1",level:3},{value:"Usage",id:"usage-18",level:4},{value:"Options",id:"options-14",level:4},{value:"<code>start</code>",id:"start-1",level:3},{value:"Usage",id:"usage-19",level:4},{value:"Options",id:"options-15",level:4},{value:"<code>restart</code>",id:"restart-1",level:3},{value:"Usage",id:"usage-20",level:4},{value:"Options",id:"options-16",level:4},{value:"<code>localrun</code>",id:"localrun-1",level:3},{value:"Usage",id:"usage-21",level:4},{value:"Options",id:"options-17",level:4},{value:"<code>available-sinks</code>",id:"available-sinks",level:3},{value:"Usage",id:"usage-22",level:4},{value:"<code>reload</code>",id:"reload-1",level:3},{value:"Usage",id:"usage-23",level:4}],o={toc:d},s="wrapper";function y(e){let{components:a,...t}=e;return(0,l.yg)(s,(0,n.A)({},o,t,{components:a,mdxType:"MDXLayout"}),(0,l.yg)("blockquote",null,(0,l.yg)("p",{parentName:"blockquote"},(0,l.yg)("strong",{parentName:"p"},"Important")),(0,l.yg)("p",{parentName:"blockquote"},"For the latest and complete information about ",(0,l.yg)("inlineCode",{parentName:"p"},"Pulsar admin"),", including commands, flags, descriptions, and more information, see Pulsar admin doc.")),(0,l.yg)("p",null,"The ",(0,l.yg)("inlineCode",{parentName:"p"},"pulsar-admin")," tool helps you manage Pulsar connectors."),(0,l.yg)("h2",{id:"sources"},(0,l.yg)("inlineCode",{parentName:"h2"},"sources")),(0,l.yg)("p",null,"An interface for managing Pulsar IO sources (ingress data into Pulsar)."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources subcommands\n\n")),(0,l.yg)("p",null,"Subcommands are:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"create"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"update"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"delete"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"get"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"status"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"list"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"stop"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"start"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"restart"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"localrun"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"available-sources"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"reload")))),(0,l.yg)("h3",{id:"create"},(0,l.yg)("inlineCode",{parentName:"h3"},"create")),(0,l.yg)("p",null,"Submit a Pulsar IO source connector to run in a Pulsar cluster."),(0,l.yg)("h4",{id:"usage"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources create options\n\n")),(0,l.yg)("h4",{id:"options"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--archive")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to the NAR archive for the source. ",(0,l.yg)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's class name if ",(0,l.yg)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--cpu")),(0,l.yg)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,l.yg)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--disk")),(0,l.yg)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"}," --parallelism")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's parallelism factor, that is, the number of source instances to run.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.yg)("td",{parentName:"tr",align:null},"The processing guarantees (aka delivery semantics) applied to the source.",(0,l.yg)("br",null),"Possible Values: ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--ram")),(0,l.yg)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the process and Docker runtimes).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-st"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--schema-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The schema type.",(0,l.yg)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--source-config")),(0,l.yg)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--source-config-file")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source's configuration.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-t"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--source-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's connector provider. The ",(0,l.yg)("inlineCode",{parentName:"td"},"source-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,l.yg)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.yg)("h3",{id:"update"},(0,l.yg)("inlineCode",{parentName:"h3"},"update")),(0,l.yg)("p",null,"Update a already submitted Pulsar IO source connector."),(0,l.yg)("h4",{id:"usage-1"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources update options\n\n")),(0,l.yg)("h4",{id:"options-1"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--archive")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to the NAR archive for the source. ",(0,l.yg)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's class name if ",(0,l.yg)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--cpu")),(0,l.yg)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,l.yg)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--disk")),(0,l.yg)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"}," --parallelism")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's parallelism factor, that is, the number of source instances to run.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.yg)("td",{parentName:"tr",align:null},"The processing guarantees (aka delivery semantics) applied to the source.",(0,l.yg)("br",null),"Possible Values: ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--ram")),(0,l.yg)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the process and Docker runtimes).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-st"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--schema-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The schema type.",(0,l.yg)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--source-config")),(0,l.yg)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--source-config-file")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source's configuration.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-t"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--source-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's connector provider. The ",(0,l.yg)("inlineCode",{parentName:"td"},"source-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,l.yg)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--update-auth-data")),(0,l.yg)("td",{parentName:"tr",align:null},"Whether or not to update the auth data.",(0,l.yg)("br",null),(0,l.yg)("strong",{parentName:"td"},"Default value: false."))))),(0,l.yg)("h3",{id:"delete"},(0,l.yg)("inlineCode",{parentName:"h3"},"delete")),(0,l.yg)("p",null,"Delete a Pulsar IO source connector."),(0,l.yg)("h4",{id:"usage-2"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources delete options\n\n")),(0,l.yg)("h4",{id:"option"},"Option"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.yg)("h3",{id:"get"},(0,l.yg)("inlineCode",{parentName:"h3"},"get")),(0,l.yg)("p",null,"Get the information about a Pulsar IO source connector."),(0,l.yg)("h4",{id:"usage-3"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources get options\n\n")),(0,l.yg)("h4",{id:"options-2"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.yg)("h3",{id:"status"},(0,l.yg)("inlineCode",{parentName:"h3"},"status")),(0,l.yg)("p",null,"Check the current status of a Pulsar Source."),(0,l.yg)("h4",{id:"usage-4"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources status options\n\n")),(0,l.yg)("h4",{id:"options-3"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.yg)("td",{parentName:"tr",align:null},"The source ID.",(0,l.yg)("br",null),"If ",(0,l.yg)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar gets status of all instances.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.yg)("h3",{id:"list"},(0,l.yg)("inlineCode",{parentName:"h3"},"list")),(0,l.yg)("p",null,"List all running Pulsar IO source connectors."),(0,l.yg)("h4",{id:"usage-5"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources list options\n\n")),(0,l.yg)("h4",{id:"options-4"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.yg)("h3",{id:"stop"},(0,l.yg)("inlineCode",{parentName:"h3"},"stop")),(0,l.yg)("p",null,"Stop a source instance."),(0,l.yg)("h4",{id:"usage-6"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources stop options\n\n")),(0,l.yg)("h4",{id:"options-5"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.yg)("td",{parentName:"tr",align:null},"The source instanceID.",(0,l.yg)("br",null),"If ",(0,l.yg)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar stops all instances.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.yg)("h3",{id:"start"},(0,l.yg)("inlineCode",{parentName:"h3"},"start")),(0,l.yg)("p",null,"Start a source instance."),(0,l.yg)("h4",{id:"usage-7"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources start options\n\n")),(0,l.yg)("h4",{id:"options-6"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.yg)("td",{parentName:"tr",align:null},"The source instanceID.",(0,l.yg)("br",null),"If ",(0,l.yg)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar starts all instances.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.yg)("h3",{id:"restart"},(0,l.yg)("inlineCode",{parentName:"h3"},"restart")),(0,l.yg)("p",null,"Restart a source instance."),(0,l.yg)("h4",{id:"usage-8"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources restart options\n\n")),(0,l.yg)("h4",{id:"options-7"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.yg)("td",{parentName:"tr",align:null},"The source instanceID.",(0,l.yg)("br",null),"If ",(0,l.yg)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar restarts all instances.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.yg)("h3",{id:"localrun"},(0,l.yg)("inlineCode",{parentName:"h3"},"localrun")),(0,l.yg)("p",null,"Run a Pulsar IO source connector locally rather than deploying it to the Pulsar cluster."),(0,l.yg)("h4",{id:"usage-9"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources localrun options\n\n")),(0,l.yg)("h4",{id:"options-8"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--archive")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to the NAR archive for the Source. ",(0,l.yg)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--broker-service-url")),(0,l.yg)("td",{parentName:"tr",align:null},"The URL for the Pulsar broker.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's class name if ",(0,l.yg)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--client-auth-params")),(0,l.yg)("td",{parentName:"tr",align:null},"Client authentication parameter.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--client-auth-plugin")),(0,l.yg)("td",{parentName:"tr",align:null},"Client authentication plugin using which function-process can connect to broker.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--cpu")),(0,l.yg)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,l.yg)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--disk")),(0,l.yg)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--hostname-verification-enabled")),(0,l.yg)("td",{parentName:"tr",align:null},"Enable hostname verification.",(0,l.yg)("br",null),(0,l.yg)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The source\u2019s name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The source\u2019s namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--parallelism")),(0,l.yg)("td",{parentName:"tr",align:null},"The source\u2019s parallelism factor, that is, the number of source instances to run).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.yg)("td",{parentName:"tr",align:null},"The processing guarantees (aka delivery semantics) applied to the source. ",(0,l.yg)("br",null),"Available values: ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--ram")),(0,l.yg)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-st"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--schema-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The schema type.",(0,l.yg)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--source-config")),(0,l.yg)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--source-config-file")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source\u2019s configuration.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--source-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The source's connector provider. The ",(0,l.yg)("inlineCode",{parentName:"td"},"source-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,l.yg)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The source\u2019s tenant.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tls-allow-insecure")),(0,l.yg)("td",{parentName:"tr",align:null},"Allow insecure tls connection.",(0,l.yg)("br",null),(0,l.yg)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tls-trust-cert-path")),(0,l.yg)("td",{parentName:"tr",align:null},"The tls trust cert file path.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--use-tls")),(0,l.yg)("td",{parentName:"tr",align:null},"Use tls connection.",(0,l.yg)("br",null),(0,l.yg)("strong",{parentName:"td"},"Default value: false"),".")))),(0,l.yg)("h3",{id:"available-sources"},(0,l.yg)("inlineCode",{parentName:"h3"},"available-sources")),(0,l.yg)("p",null,"Get the list of Pulsar IO connector sources supported by Pulsar cluster."),(0,l.yg)("h4",{id:"usage-10"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources available-sources\n\n")),(0,l.yg)("h3",{id:"reload"},(0,l.yg)("inlineCode",{parentName:"h3"},"reload")),(0,l.yg)("p",null,"Reload the available built-in connectors."),(0,l.yg)("h4",{id:"usage-11"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources reload\n\n")),(0,l.yg)("h2",{id:"sinks"},(0,l.yg)("inlineCode",{parentName:"h2"},"sinks")),(0,l.yg)("p",null,"An interface for managing Pulsar IO sinks (egress data from Pulsar)."),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks subcommands\n\n")),(0,l.yg)("p",null,"Subcommands are:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"create"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"update"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"delete"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"get"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"status"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"list"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"stop"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"start"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"restart"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"localrun"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"available-sinks"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},(0,l.yg)("inlineCode",{parentName:"p"},"reload")))),(0,l.yg)("h3",{id:"create-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"create")),(0,l.yg)("p",null,"Submit a Pulsar IO sink connector to run in a Pulsar cluster."),(0,l.yg)("h4",{id:"usage-12"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks create options\n\n")),(0,l.yg)("h4",{id:"options-9"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--archive")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,l.yg)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--auto-ack")),(0,l.yg)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,l.yg)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--cpu")),(0,l.yg)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The map of input topics to schema types or class names (as a JSON string).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--disk")),(0,l.yg)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-i, --inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"}," --parallelism")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's parallelism factor, that is, the number of sink instances to run.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.yg)("td",{parentName:"tr",align:null},"The processing guarantees (aka delivery semantics) applied to the sink.",(0,l.yg)("br",null),"Possible Values: ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--ram")),(0,l.yg)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the process and Docker runtimes).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,l.yg)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--sink-config")),(0,l.yg)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink's configuration.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-t"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--sink-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's connector provider. The ",(0,l.yg)("inlineCode",{parentName:"td"},"sink-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,l.yg)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--subs-name")),(0,l.yg)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,l.yg)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,l.yg)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,l.yg)("br",null),(0,l.yg)("inlineCode",{parentName:"td"},"--input")," and ",(0,l.yg)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,l.yg)("br",null),"Add SerDe class name for a pattern in ",(0,l.yg)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")))),(0,l.yg)("h3",{id:"update-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"update")),(0,l.yg)("p",null,"Update a Pulsar IO sink connector."),(0,l.yg)("h4",{id:"usage-13"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks update options\n\n")),(0,l.yg)("h4",{id:"options-10"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--archive")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,l.yg)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--auto-ack")),(0,l.yg)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,l.yg)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--cpu")),(0,l.yg)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The map of input topics to schema types or class names (as a JSON string).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--disk")),(0,l.yg)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-i, --inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"}," --parallelism")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's parallelism factor, that is, the number of sink instances to run.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.yg)("td",{parentName:"tr",align:null},"The processing guarantees (aka delivery semantics) applied to the sink.",(0,l.yg)("br",null),"Possible Values: ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--ram")),(0,l.yg)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the process and Docker runtimes).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,l.yg)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--sink-config")),(0,l.yg)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink's configuration.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-t"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--sink-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's connector provider. The ",(0,l.yg)("inlineCode",{parentName:"td"},"sink-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,l.yg)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--subs-name")),(0,l.yg)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,l.yg)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,l.yg)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,l.yg)("br",null),(0,l.yg)("inlineCode",{parentName:"td"},"--input")," and ",(0,l.yg)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,l.yg)("br",null),"Add SerDe class name for a pattern in ",(0,l.yg)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--update-auth-data")),(0,l.yg)("td",{parentName:"tr",align:null},"Whether or not to update the auth data.",(0,l.yg)("br",null),(0,l.yg)("strong",{parentName:"td"},"Default value: false."))))),(0,l.yg)("h3",{id:"delete-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"delete")),(0,l.yg)("p",null,"Delete a Pulsar IO sink connector."),(0,l.yg)("h4",{id:"usage-14"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks delete options\n\n")),(0,l.yg)("h4",{id:"option-1"},"Option"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.yg)("h3",{id:"get-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"get")),(0,l.yg)("p",null,"Get the information about a Pulsar IO sink connector."),(0,l.yg)("h4",{id:"usage-15"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks get options\n\n")),(0,l.yg)("h4",{id:"options-11"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.yg)("h3",{id:"status-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"status")),(0,l.yg)("p",null,"Check the current status of a Pulsar sink."),(0,l.yg)("h4",{id:"usage-16"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks status options\n\n")),(0,l.yg)("h4",{id:"options-12"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink ID.",(0,l.yg)("br",null),"If ",(0,l.yg)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar gets status of all instances.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.yg)("h3",{id:"list-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"list")),(0,l.yg)("p",null,"List all running Pulsar IO sink connectors."),(0,l.yg)("h4",{id:"usage-17"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks list options\n\n")),(0,l.yg)("h4",{id:"options-13"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.yg)("h3",{id:"stop-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"stop")),(0,l.yg)("p",null,"Stop a sink instance."),(0,l.yg)("h4",{id:"usage-18"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks stop options\n\n")),(0,l.yg)("h4",{id:"options-14"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,l.yg)("br",null),"If ",(0,l.yg)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar stops all instances.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.yg)("h3",{id:"start-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"start")),(0,l.yg)("p",null,"Start a sink instance."),(0,l.yg)("h4",{id:"usage-19"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks start options\n\n")),(0,l.yg)("h4",{id:"options-15"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,l.yg)("br",null),"If ",(0,l.yg)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar starts all instances.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.yg)("h3",{id:"restart-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"restart")),(0,l.yg)("p",null,"Restart a sink instance."),(0,l.yg)("h4",{id:"usage-20"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks restart options\n\n")),(0,l.yg)("h4",{id:"options-16"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,l.yg)("br",null),"If ",(0,l.yg)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar restarts all instances.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.yg)("h3",{id:"localrun-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"localrun")),(0,l.yg)("p",null,"Run a Pulsar IO sink connector locally rather than deploying it to the Pulsar cluster."),(0,l.yg)("h4",{id:"usage-21"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks localrun options\n\n")),(0,l.yg)("h4",{id:"options-17"},"Options"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Flag"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--archive")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,l.yg)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--auto-ack")),(0,l.yg)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--broker-service-url")),(0,l.yg)("td",{parentName:"tr",align:null},"The URL for the Pulsar broker.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--classname")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,l.yg)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--client-auth-params")),(0,l.yg)("td",{parentName:"tr",align:null},"Client authentication parameter.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--client-auth-plugin")),(0,l.yg)("td",{parentName:"tr",align:null},"Client authentication plugin using which function-process can connect to broker.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--cpu")),(0,l.yg)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The map of input topics to Schema types or class names (as a JSON string).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--disk")),(0,l.yg)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--hostname-verification-enabled")),(0,l.yg)("td",{parentName:"tr",align:null},"Enable hostname verification.",(0,l.yg)("br",null),(0,l.yg)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"-i"),", ",(0,l.yg)("inlineCode",{parentName:"td"},"--inputs")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--name")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink\u2019s name.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--namespace")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink\u2019s namespace.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--parallelism")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink\u2019s parallelism factor, that is, the number of sink instances to run).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.yg)("td",{parentName:"tr",align:null},"The processing guarantees (aka delivery semantics) applied to the sink. ",(0,l.yg)("br",null),"Available values: ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--ram")),(0,l.yg)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,l.yg)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--sink-config")),(0,l.yg)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,l.yg)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink\u2019s configuration.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--sink-type")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink's connector provider. The ",(0,l.yg)("inlineCode",{parentName:"td"},"sink-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,l.yg)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--subs-name")),(0,l.yg)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tenant")),(0,l.yg)("td",{parentName:"tr",align:null},"The sink\u2019s tenant.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,l.yg)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tls-allow-insecure")),(0,l.yg)("td",{parentName:"tr",align:null},"Allow insecure tls connection.",(0,l.yg)("br",null),(0,l.yg)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--tls-trust-cert-path")),(0,l.yg)("td",{parentName:"tr",align:null},"The tls trust cert file path.")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,l.yg)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,l.yg)("br",null),(0,l.yg)("inlineCode",{parentName:"td"},"--input")," and ",(0,l.yg)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,l.yg)("br",null),"Add SerDe class name for a pattern in ",(0,l.yg)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},(0,l.yg)("inlineCode",{parentName:"td"},"--use-tls")),(0,l.yg)("td",{parentName:"tr",align:null},"Use tls connection.",(0,l.yg)("br",null),(0,l.yg)("strong",{parentName:"td"},"Default value: false"),".")))),(0,l.yg)("h3",{id:"available-sinks"},(0,l.yg)("inlineCode",{parentName:"h3"},"available-sinks")),(0,l.yg)("p",null,"Get the list of Pulsar IO connector sinks supported by Pulsar cluster."),(0,l.yg)("h4",{id:"usage-22"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks available-sinks\n\n")),(0,l.yg)("h3",{id:"reload-1"},(0,l.yg)("inlineCode",{parentName:"h3"},"reload")),(0,l.yg)("p",null,"Reload the available built-in connectors."),(0,l.yg)("h4",{id:"usage-23"},"Usage"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks reload\n\n")))}y.isMDXComponent=!0}}]);