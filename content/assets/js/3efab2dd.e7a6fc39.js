"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[56564],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>d});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},y=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=u(t),y=r,d=c["".concat(p,".").concat(y)]||c[y]||g[y]||l;return t?a.createElement(d,o(o({ref:n},s),{},{components:t})):a.createElement(d,o({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=y;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[c]="string"==typeof e?e:r,o[1]=i;for(var u=2;u<l;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}y.displayName="MDXCreateElement"},75310:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var a=t(58168),r=(t(96540),t(15680));const l={id:"io-netty",title:"Netty Tcp or Udp Connector",sidebar_label:"Netty Tcp or Udp Connector",original_id:"io-netty"},o=void 0,i={unversionedId:"io-netty",id:"version-2.4.1/io-netty",title:"Netty Tcp or Udp Connector",description:"Source",source:"@site/versioned_docs/version-2.4.1/io-netty.md",sourceDirName:".",slug:"/io-netty",permalink:"/docs/2.4.1/io-netty",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.4.1/io-netty.md",tags:[],version:"2.4.1",frontMatter:{id:"io-netty",title:"Netty Tcp or Udp Connector",sidebar_label:"Netty Tcp or Udp Connector",original_id:"io-netty"}},p={},u=[{value:"Source",id:"source",level:2},{value:"Source Configuration Options",id:"source-configuration-options",level:3},{value:"Configuration Example",id:"configuration-example",level:3},{value:"Usage example",id:"usage-example",level:3},{value:"Tcp example",id:"tcp-example",level:4},{value:"Http example",id:"http-example",level:4}],s={toc:u},c="wrapper";function g(e){let{components:n,...t}=e;return(0,r.yg)(c,(0,a.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"source"},"Source"),(0,r.yg)("p",null,"The Netty Source connector opens a port that accept incoming data via the configured network protocol and publish it to a user-defined Pulsar topic.\nAlso, this connector is suggested to be used in a containerized (e.g. k8s) deployment.\nOtherwise, if the connector is running in process or thread mode, the instances may be conflicting on listening to ports."),(0,r.yg)("h3",{id:"source-configuration-options"},"Source Configuration Options"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Required"),(0,r.yg)("th",{parentName:"tr",align:null},"Default"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"type")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"tcp")),(0,r.yg)("td",{parentName:"tr",align:null},"The network protocol over which data is trasmitted to netty. Valid values include HTTP, TCP, and UDP")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"host")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"127.0.0.1")),(0,r.yg)("td",{parentName:"tr",align:null},"The host name or address that the source instance to listen on.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"port")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"10999")),(0,r.yg)("td",{parentName:"tr",align:null},"The port that the source instance to listen on.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"numberOfThreads")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"false")),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"1")),(0,r.yg)("td",{parentName:"tr",align:null},"The number of threads of Netty Tcp Server to accept incoming connections and handle the traffic of the accepted connections.")))),(0,r.yg)("h3",{id:"configuration-example"},"Configuration Example"),(0,r.yg)("p",null,"Here is a configuration Json example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$json"},'\n{\n    "type": "tcp",\n    "host": "127.0.0.1",\n    "port": "10911",\n    "numberOfThreads": "5"\n}\n\n')),(0,r.yg)("p",null,"Here is a configuration Yaml example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$yaml"},'\nconfigs:\n    type: "tcp"\n    host: "127.0.0.1"\n    port: 10999\n    numberOfThreads: 1\n\n')),(0,r.yg)("h3",{id:"usage-example"},"Usage example"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start pulsar standalone")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$bash"},"\ndocker pull apachepulsar/pulsar:2.4.0\ndocker run -d -it -p 6650:6650 -p 8080:8080 -v $PWD/data:/pulsar/data --name pulsar-netty-standalone apachepulsar/pulsar:2.4.0 bin/pulsar standalone\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start pulsar-io in standalone")),(0,r.yg)("h4",{id:"tcp-example"},"Tcp example"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Config file netty-source-config.yaml")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$yaml"},'\nconfigs:\n    type: "tcp"\n    host: "127.0.0.1"\n    port: 10999\n    numberOfThreads: 1\n\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Copy configuration file to pulsar server")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$bash"},"\ndocker cp netty-source-config.yaml pulsar-netty-standalone:/pulsar/conf/\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Download netty connector and start netty connector")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$bash"},"\ndocker exec -it pulsar-netty-standalone /bin/bash\ncurl -O http://mirror-hk.koddos.net/apache/pulsar/pulsar-2.4.0/connectors/pulsar-io-netty-2.4.0.nar\n./bin/pulsar-admin sources localrun --archive pulsar-io-2.4.1.nar --tenant public --namespace default --name netty --destination-topic-name netty-topic --source-config-file netty-source-config.yaml --parallelism 1\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Consume data")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$bash"},"\ndocker exec -it pulsar-netty-standalone /bin/bash\n./bin/pulsar-client consume -t Exclusive -s netty-sub netty-topic -n 0\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Open another window for send data to netty source")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$bash"},"\ndocker exec -it pulsar-netty-standalone /bin/bash\napt-get update\napt-get -y install telnet\nroot@1d19327b2c67:/pulsar# telnet 127.0.0.1 10999\nTrying 127.0.0.1...\nConnected to 127.0.0.1.\nEscape character is '^]'.\nhello\nworld\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Verification results")),(0,r.yg)("p",null,"In the consumer window just opened, you can see the following data"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n----- got message -----\nhello\n\n----- got message -----\nworld\n\n")),(0,r.yg)("h4",{id:"http-example"},"Http example"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Config file netty-source-config.yaml")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$yaml"},'\nconfigs:\n    type: "http"\n    host: "127.0.0.1"\n    port: 10999\n    numberOfThreads: 1\n\n')),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start netty source")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-$bash"},"\ndocker exec -it pulsar-netty-standalone /bin/bash\n./bin/pulsar-admin sources localrun --archive pulsar-io-2.4.1.nar --tenant public --namespace default --name netty --destination-topic-name netty-topic --source-config-file netty-source-config.yaml --parallelism 1\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Verification results")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\ncurl -X POST --data 'hello, world!' http://127.0.0.1:10999/\n\n")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Verification results")),(0,r.yg)("p",null,"In the consumer window just opened, you can see the following data"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n----- got message -----\nhello, world!\n\n")))}g.isMDXComponent=!0}}]);