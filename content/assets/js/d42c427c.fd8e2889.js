"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[25062],{15680:(e,a,n)=>{n.d(a,{xA:()=>u,yg:()=>m});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function l(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?l(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},l=Object.keys(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)n=l[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),p=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},u=function(e){var a=p(e.components);return t.createElement(s.Provider,{value:a},e.children)},g="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},c=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),g=p(n),c=r,m=g["".concat(s,".").concat(c)]||g[c]||y[c]||l;return n?t.createElement(m,o(o({ref:a},u),{},{components:n})):t.createElement(m,o({ref:a},u))}));function m(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=c;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i[g]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}c.displayName="MDXCreateElement"},27467:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>y,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var t=n(58168),r=(n(96540),n(15680));const l={id:"deploy-aws",title:"Deploying a Pulsar cluster on AWS using Terraform and Ansible",sidebar_label:"Amazon Web Services",original_id:"deploy-aws"},o=void 0,i={unversionedId:"deploy-aws",id:"version-2.2.0/deploy-aws",title:"Deploying a Pulsar cluster on AWS using Terraform and Ansible",description:"For instructions on deploying a single Pulsar cluster manually rather than using Terraform and Ansible, see Deploying a Pulsar cluster on bare metal. For instructions on manually deploying a multi-cluster Pulsar instance, see Deploying a Pulsar instance on bare metal.",source:"@site/versioned_docs/version-2.2.0/deploy-aws.md",sourceDirName:".",slug:"/deploy-aws",permalink:"/docs/2.2.0/deploy-aws",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.2.0/deploy-aws.md",tags:[],version:"2.2.0",frontMatter:{id:"deploy-aws",title:"Deploying a Pulsar cluster on AWS using Terraform and Ansible",sidebar_label:"Amazon Web Services",original_id:"deploy-aws"},sidebar:"version-2.2.0/docsSidebar",previous:{title:"Deployment and Configuration",permalink:"/docs/2.2.0/sql-deployment-configurations"},next:{title:"Kubernetes",permalink:"/docs/2.2.0/deploy-kubernetes"}},s={},p=[{value:"Requirements and setup",id:"requirements-and-setup",level:2},{value:"Installation",id:"installation",level:2},{value:"SSH setup",id:"ssh-setup",level:2},{value:"Creating AWS resources using Terraform",id:"creating-aws-resources-using-terraform",level:2},{value:"Applying a non-default configuration",id:"applying-a-non-default-configuration",level:3},{value:"What is installed",id:"what-is-installed",level:3},{value:"Fetching your Pulsar connection URL",id:"fetching-your-pulsar-connection-url",level:3},{value:"Destroying your cluster",id:"destroying-your-cluster",level:3},{value:"Setup Disks",id:"setup-disks",level:2},{value:"Running the Pulsar playbook",id:"running-the-pulsar-playbook",level:2},{value:"Accessing the cluster",id:"accessing-the-cluster",level:2}],u={toc:p},g="wrapper";function y(e){let{components:a,...n}=e;return(0,r.yg)(g,(0,t.A)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"For instructions on deploying a single Pulsar cluster manually rather than using Terraform and Ansible, see ",(0,r.yg)("a",{parentName:"p",href:"/docs/2.2.0/deploy-bare-metal"},"Deploying a Pulsar cluster on bare metal"),". For instructions on manually deploying a multi-cluster Pulsar instance, see ",(0,r.yg)("a",{parentName:"p",href:"/docs/2.2.0/deploy-bare-metal-multi-cluster"},"Deploying a Pulsar instance on bare metal"),".")),(0,r.yg)("p",null,"One of the easiest ways to get a Pulsar ",(0,r.yg)("a",{parentName:"p",href:"/docs/2.2.0/reference-terminology#cluster"},"cluster")," running on ",(0,r.yg)("a",{parentName:"p",href:"https://aws.amazon.com/"},"Amazon Web Services")," (AWS) is to use the the ",(0,r.yg)("a",{parentName:"p",href:"https://terraform.io"},"Terraform")," infrastructure provisioning tool and the ",(0,r.yg)("a",{parentName:"p",href:"https://www.ansible.com"},"Ansible")," server automation tool. Terraform can create the resources necessary to run the Pulsar cluster---",(0,r.yg)("a",{parentName:"p",href:"https://aws.amazon.com/ec2/"},"EC2")," instances, networking and security infrastructure, etc.---while Ansible can install and run Pulsar on the provisioned resources."),(0,r.yg)("h2",{id:"requirements-and-setup"},"Requirements and setup"),(0,r.yg)("p",null,"In order install a Pulsar cluster on AWS using Terraform and Ansible, you'll need:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"An ",(0,r.yg)("a",{parentName:"li",href:"https://aws.amazon.com/account/"},"AWS account")," and the ",(0,r.yg)("a",{parentName:"li",href:"https://aws.amazon.com/cli/"},(0,r.yg)("inlineCode",{parentName:"a"},"aws"))," command-line tool"),(0,r.yg)("li",{parentName:"ul"},"Python and ",(0,r.yg)("a",{parentName:"li",href:"https://pip.pypa.io/en/stable/"},"pip")),(0,r.yg)("li",{parentName:"ul"},"The ",(0,r.yg)("a",{parentName:"li",href:"https://github.com/adammck/terraform-inventory"},(0,r.yg)("inlineCode",{parentName:"a"},"terraform-inventory"))," tool, which enables Ansible to use Terraform artifacts")),(0,r.yg)("p",null,"You'll also need to make sure that you're currently logged into your AWS account via the ",(0,r.yg)("inlineCode",{parentName:"p"},"aws")," tool:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ aws configure\n\n")),(0,r.yg)("h2",{id:"installation"},"Installation"),(0,r.yg)("p",null,"You can install Ansible on Linux or macOS using pip."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pip install ansible\n\n")),(0,r.yg)("p",null,"You can install Terraform using the instructions ",(0,r.yg)("a",{parentName:"p",href:"https://learn.hashicorp.com/tutorials/terraform/install-cli"},"here"),"."),(0,r.yg)("p",null,"You'll also need to have the Terraform and Ansible configurations for Pulsar locally on your machine. They're contained in Pulsar's ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/pulsar"},"GitHub repository"),", which you can fetch using Git:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ git clone https://github.com/apache/pulsar\n$ cd pulsar/deployment/terraform-ansible/aws\n\n")),(0,r.yg)("h2",{id:"ssh-setup"},"SSH setup"),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"If you already have an SSH key and would like to use it, you skip generating the SSH keys and update ",(0,r.yg)("inlineCode",{parentName:"p"},"private_key_file")," setting\nin ",(0,r.yg)("inlineCode",{parentName:"p"},"ansible.cfg")," file and ",(0,r.yg)("inlineCode",{parentName:"p"},"public_key_path")," setting in ",(0,r.yg)("inlineCode",{parentName:"p"},"terraform.tfvars")," file."),(0,r.yg)("p",{parentName:"blockquote"},"For example, if you already had a private SSH key in ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.ssh/pulsar_aws")," and a public key in ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.ssh/pulsar_aws.pub"),",\nyou can do followings:"),(0,r.yg)("ol",{parentName:"blockquote"},(0,r.yg)("li",{parentName:"ol"},"update ",(0,r.yg)("inlineCode",{parentName:"li"},"ansible.cfg")," with following values:"))),(0,r.yg)("blockquote",null,(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"\nprivate_key_file=~/.ssh/pulsar_aws\n\n\n"))),(0,r.yg)("blockquote",null,(0,r.yg)("ol",{parentName:"blockquote",start:2},(0,r.yg)("li",{parentName:"ol"},"update ",(0,r.yg)("inlineCode",{parentName:"li"},"terraform.tfvars")," with following values:"))),(0,r.yg)("blockquote",null,(0,r.yg)("pre",{parentName:"blockquote"},(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"\npublic_key_path=~/.ssh/pulsar_aws.pub\n\n\n"))),(0,r.yg)("p",null,"In order to create the necessary AWS resources using Terraform, you'll need to create an SSH key. To create a private SSH key in ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.ssh/id_rsa")," and a public key in ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.ssh/id_rsa.pub"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ ssh-keygen -t rsa\n\n")),(0,r.yg)("p",null,"Do ",(0,r.yg)("em",{parentName:"p"},"not")," enter a passphrase (hit ",(0,r.yg)("strong",{parentName:"p"},"Enter")," when prompted instead). To verify that a key has been created:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ ls ~/.ssh\nid_rsa               id_rsa.pub\n\n")),(0,r.yg)("h2",{id:"creating-aws-resources-using-terraform"},"Creating AWS resources using Terraform"),(0,r.yg)("p",null,"To get started building AWS resources with Terraform, you'll need to install all Terraform dependencies:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ terraform init\n# This will create a .terraform folder\n\n")),(0,r.yg)("p",null,"Once you've done that, you can apply the default Terraform configuration:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ terraform apply\n\n")),(0,r.yg)("p",null,"You should then see this prompt:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\nDo you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n\n  Enter a value:\n\n")),(0,r.yg)("p",null,"Type ",(0,r.yg)("inlineCode",{parentName:"p"},"yes")," and hit ",(0,r.yg)("strong",{parentName:"p"},"Enter"),". Applying the configuration could take several minutes. When it's finished, you should see ",(0,r.yg)("inlineCode",{parentName:"p"},"Apply complete!")," along with some other information, including the number of resources created."),(0,r.yg)("h3",{id:"applying-a-non-default-configuration"},"Applying a non-default configuration"),(0,r.yg)("p",null,"You can apply a non-default Terraform configuration by changing the values in the ",(0,r.yg)("inlineCode",{parentName:"p"},"terraform.tfvars")," file. The following variables are available:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"left"},"Variable name"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Description"),(0,r.yg)("th",{parentName:"tr",align:"left"},"Default"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"public_key_path")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The path of the public key that you've generated."),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"~/.ssh/id_rsa.pub"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"region")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The AWS region in which the Pulsar cluster will run"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"us-west-2"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"availability_zone")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The AWS availability zone in which the Pulsar cluster will run"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"us-west-2a"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"aws_ami")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The ",(0,r.yg)("a",{parentName:"td",href:"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIs.html"},"Amazon Machine Image")," (AMI) that will be used by the cluster"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"ami-9fa343e7"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"num_zookeeper_nodes")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The number of ",(0,r.yg)("a",{parentName:"td",href:"https://zookeeper.apache.org"},"ZooKeeper")," nodes in the ZooKeeper cluster"),(0,r.yg)("td",{parentName:"tr",align:"left"},"3")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"num_bookie_nodes")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The number of bookies that will run in the cluster"),(0,r.yg)("td",{parentName:"tr",align:"left"},"3")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"num_broker_nodes")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The number of Pulsar brokers that will run in the cluster"),(0,r.yg)("td",{parentName:"tr",align:"left"},"2")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"num_proxy_nodes")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The number of Pulsar proxies that will run in the cluster"),(0,r.yg)("td",{parentName:"tr",align:"left"},"1")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"base_cidr_block")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The root ",(0,r.yg)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing"},"CIDR")," that will be used by network assets for the cluster"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"10.0.0.0/16"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"instance_types")),(0,r.yg)("td",{parentName:"tr",align:"left"},"The EC2 instance types to be used. This variable is a map with two keys: ",(0,r.yg)("inlineCode",{parentName:"td"},"zookeeper")," for the ZooKeeper instances, ",(0,r.yg)("inlineCode",{parentName:"td"},"bookie")," for the BookKeeper bookies and ",(0,r.yg)("inlineCode",{parentName:"td"},"broker")," and ",(0,r.yg)("inlineCode",{parentName:"td"},"proxy")," for Pulsar brokers and bookies"),(0,r.yg)("td",{parentName:"tr",align:"left"},(0,r.yg)("inlineCode",{parentName:"td"},"t2.small")," (ZooKeeper), ",(0,r.yg)("inlineCode",{parentName:"td"},"i3.xlarge")," (BookKeeper) and ",(0,r.yg)("inlineCode",{parentName:"td"},"c5.2xlarge")," (Brokers/Proxies)")))),(0,r.yg)("h3",{id:"what-is-installed"},"What is installed"),(0,r.yg)("p",null,"When you run the Ansible playbook, the following AWS resources will be used:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"9 total ",(0,r.yg)("a",{parentName:"li",href:"https://aws.amazon.com/ec2"},"Elastic Compute Cloud")," (EC2) instances running the ",(0,r.yg)("a",{parentName:"li",href:"https://access.redhat.com/articles/3135091"},"ami-9fa343e7")," Amazon Machine Image (AMI), which runs ",(0,r.yg)("a",{parentName:"li",href:"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/7.4_release_notes/index"},"Red Hat Enterprise Linux (RHEL) 7.4"),". By default, that includes:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"3 small VMs for ZooKeeper (",(0,r.yg)("a",{parentName:"li",href:"https://www.ec2instances.info/?selected=t2.small"},"t2.small")," instances)"),(0,r.yg)("li",{parentName:"ul"},"3 larger VMs for BookKeeper ",(0,r.yg)("a",{parentName:"li",href:"/docs/2.2.0/reference-terminology#bookie"},"bookies")," (",(0,r.yg)("a",{parentName:"li",href:"https://www.ec2instances.info/?selected=i3.xlarge"},"i3.xlarge")," instances)"),(0,r.yg)("li",{parentName:"ul"},"2 larger VMs for Pulsar ",(0,r.yg)("a",{parentName:"li",href:"/docs/2.2.0/reference-terminology#broker"},"brokers")," (",(0,r.yg)("a",{parentName:"li",href:"https://www.ec2instances.info/?selected=c5.2xlarge"},"c5.2xlarge")," instances)"),(0,r.yg)("li",{parentName:"ul"},"1 larger VMs for Pulsar ",(0,r.yg)("a",{parentName:"li",href:"/docs/2.2.0/reference-terminology#proxy"},"proxy")," (",(0,r.yg)("a",{parentName:"li",href:"https://www.ec2instances.info/?selected=c5.2xlarge"},"c5.2xlarge")," instances)"))),(0,r.yg)("li",{parentName:"ul"},"An EC2 ",(0,r.yg)("a",{parentName:"li",href:"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-network-security.html"},"security group")),(0,r.yg)("li",{parentName:"ul"},"A ",(0,r.yg)("a",{parentName:"li",href:"https://aws.amazon.com/vpc/"},"virtual private cloud")," (VPC) for security"),(0,r.yg)("li",{parentName:"ul"},"An ",(0,r.yg)("a",{parentName:"li",href:"https://aws.amazon.com/api-gateway/"},"API Gateway")," for connections from the outside world"),(0,r.yg)("li",{parentName:"ul"},"A ",(0,r.yg)("a",{parentName:"li",href:"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Route_Tables.html"},"route table")," for the Pulsar cluster's VPC"),(0,r.yg)("li",{parentName:"ul"},"A ",(0,r.yg)("a",{parentName:"li",href:"http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html"},"subnet")," for the VPC")),(0,r.yg)("p",null,"All EC2 instances for the cluster will run in the ",(0,r.yg)("a",{parentName:"p",href:"http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html"},"us-west-2")," region."),(0,r.yg)("h3",{id:"fetching-your-pulsar-connection-url"},"Fetching your Pulsar connection URL"),(0,r.yg)("p",null,"When you apply the Terraform configuration by running ",(0,r.yg)("inlineCode",{parentName:"p"},"terraform apply"),", Terraform will output a value for the ",(0,r.yg)("inlineCode",{parentName:"p"},"pulsar_service_url"),". It should look something like this:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"\npulsar://pulsar-elb-1800761694.us-west-2.elb.amazonaws.com:6650\n\n")),(0,r.yg)("p",null,"You can fetch that value at any time by running ",(0,r.yg)("inlineCode",{parentName:"p"},"terraform output pulsar_service_url")," or parsing the ",(0,r.yg)("inlineCode",{parentName:"p"},"terraform.tstate")," file (which is JSON, even though the filename doesn't reflect that):"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ cat terraform.tfstate | jq .modules[0].outputs.pulsar_service_url.value\n\n")),(0,r.yg)("h3",{id:"destroying-your-cluster"},"Destroying your cluster"),(0,r.yg)("p",null,"At any point, you can destroy all AWS resources associated with your cluster using Terraform's ",(0,r.yg)("inlineCode",{parentName:"p"},"destroy")," command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ terraform destroy\n\n")),(0,r.yg)("h2",{id:"setup-disks"},"Setup Disks"),(0,r.yg)("p",null,"Before you run the Pulsar playbook, you want to mount the disks to the correct directories on those bookie nodes.\nSince different type of machines would have different disk layout, if you change the ",(0,r.yg)("inlineCode",{parentName:"p"},"instance_types")," in your terraform\nconfig, you need to update the task defined in ",(0,r.yg)("inlineCode",{parentName:"p"},"setup-disk.yaml")," file."),(0,r.yg)("p",null,"To setup disks on bookie nodes, use this command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ ansible-playbook \\\n  --user='ec2-user' \\\n  --inventory=`which terraform-inventory` \\\n  setup-disk.yaml\n\n")),(0,r.yg)("p",null,"After running this command, the disks will be mounted under ",(0,r.yg)("inlineCode",{parentName:"p"},"/mnt/journal")," as journal disk, and ",(0,r.yg)("inlineCode",{parentName:"p"},"/mnt/storage")," as ledger disk.\nIt is important to run this command only once! If you attempt to run this command again after you have run Pulsar playbook,\nit might be potentially erase your disks again and cause the bookies to fail to start up."),(0,r.yg)("h2",{id:"running-the-pulsar-playbook"},"Running the Pulsar playbook"),(0,r.yg)("p",null,"Once you've created the necessary AWS resources using Terraform, you can install and run Pulsar on the Terraform-created EC2 instances using Ansible. To do so, use this command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ ansible-playbook \\\n  --user='ec2-user' \\\n  --inventory=`which terraform-inventory` \\\n  ../deploy-pulsar.yaml\n\n")),(0,r.yg)("p",null,"If you've created a private SSH key at a location different from ",(0,r.yg)("inlineCode",{parentName:"p"},"~/.ssh/id_rsa"),", you can specify the different location using the ",(0,r.yg)("inlineCode",{parentName:"p"},"--private-key")," flag:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ ansible-playbook \\\n  --user='ec2-user' \\\n  --inventory=`which terraform-inventory` \\\n  --private-key=\"~/.ssh/some-non-default-key\" \\\n  ../deploy-pulsar.yaml\n\n")),(0,r.yg)("h2",{id:"accessing-the-cluster"},"Accessing the cluster"),(0,r.yg)("p",null,"You can now access your running Pulsar using the unique Pulsar connection URL for your cluster, which you can obtain using the instructions ",(0,r.yg)("a",{parentName:"p",href:"#fetching-your-pulsar-connection-url"},"above"),"."),(0,r.yg)("p",null,"For a quick demonstration of accessing the cluster, we can use the Python client for Pulsar and the Python shell. First, install the Pulsar Python module using pip:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ pip install pulsar-client\n\n")),(0,r.yg)("p",null,"Now, open up the Python shell using the ",(0,r.yg)("inlineCode",{parentName:"p"},"python")," command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ python\n\n")),(0,r.yg)("p",null,"Once in the shell, run the following:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-python"},"\n>>> import pulsar\n>>> client = pulsar.Client('pulsar://pulsar-elb-1800761694.us-west-2.elb.amazonaws.com:6650')\n# Make sure to use your connection URL\n>>> producer = client.create_producer('persistent://public/default/test-topic')\n>>> producer.send('Hello world')\n>>> client.close()\n\n")),(0,r.yg)("p",null,"If all of these commands are successful, your cluster can now be used by Pulsar clients!"))}y.isMDXComponent=!0}}]);