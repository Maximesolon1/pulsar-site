"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[59673],{15680:(e,a,n)=>{n.d(a,{xA:()=>c,yg:()=>u});var t=n(96540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=t.createContext({}),o=function(e){var a=t.useContext(l),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},c=function(e){var a=o(e.components);return t.createElement(l.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},h=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=o(n),h=r,u=m["".concat(l,".").concat(h)]||m[h]||d[h]||i;return n?t.createElement(u,s(s({ref:a},c),{},{components:n})):t.createElement(u,s({ref:a},c))}));function u(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=h;var p={};for(var l in a)hasOwnProperty.call(a,l)&&(p[l]=a[l]);p.originalType=e,p[m]="string"==typeof e?e:r,s[1]=p;for(var o=2;o<i;o++)s[o]=n[o];return t.createElement.apply(null,s)}return t.createElement.apply(null,n)}h.displayName="MDXCreateElement"},69712:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var t=n(58168),r=(n(96540),n(15680));const i={id:"admin-api-schemas",title:"Managing Schemas",sidebar_label:"Schemas",original_id:"admin-api-schemas"},s=void 0,p={unversionedId:"admin-api-schemas",id:"version-2.3.2/admin-api-schemas",title:"Managing Schemas",description:"Schemas, like other entities in Pulsar, can be managed using the admin API.",source:"@site/versioned_docs/version-2.3.2/admin-api-schemas.md",sourceDirName:".",slug:"/admin-api-schemas",permalink:"/docs/2.3.2/admin-api-schemas",draft:!1,editUrl:"https://github.com/apache/pulsar-site/edit/main/versioned_docs/version-2.3.2/admin-api-schemas.md",tags:[],version:"2.3.2",frontMatter:{id:"admin-api-schemas",title:"Managing Schemas",sidebar_label:"Schemas",original_id:"admin-api-schemas"},sidebar:"version-2.3.2/docsSidebar",previous:{title:"Partitioned topics",permalink:"/docs/2.3.2/admin-api-partitioned-topics"},next:{title:"Kafka client wrapper",permalink:"/docs/2.3.2/adaptors-kafka"}},l={},o=[{value:"Schema resources",id:"schema-resources",level:2},{value:"Upload Schema",id:"upload-schema",level:3},{value:"pulsar-admin",id:"pulsar-admin",level:4},{value:"REST",id:"rest",level:4},{value:"Get Schema",id:"get-schema",level:3},{value:"pulsar-admin",id:"pulsar-admin-1",level:4},{value:"REST API",id:"rest-api",level:4},{value:"Delete Schema",id:"delete-schema",level:3},{value:"pulsar-admin",id:"pulsar-admin-2",level:4},{value:"REST API",id:"rest-api-1",level:4}],c={toc:o},m="wrapper";function d(e){let{components:a,...n}=e;return(0,r.yg)(m,(0,t.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Schemas, like other entities in Pulsar, can be managed using the ",(0,r.yg)("a",{parentName:"p",href:"/docs/2.3.2/admin-api-overview"},"admin API"),"."),(0,r.yg)("h2",{id:"schema-resources"},"Schema resources"),(0,r.yg)("p",null,"A Pulsar schema is a fairly simple data structure stored in Pulsar for representing the structure of messages stored in a Pulsar topic. The schema structure consists of:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("em",{parentName:"li"},"Name"),": A schema's name is the topic that the schema is associated to."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("em",{parentName:"li"},"Type"),": A schema type represents the type of the schema. The predefined schema types can be found ",(0,r.yg)("a",{parentName:"li",href:"/docs/2.3.2/concepts-schema-registry#supported-schema-formats"},"here"),". If it\nis a customized schema, it is left as an empty string."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("em",{parentName:"li"},"Payload"),": It is a binary representation of the schema. How to interpret it is up to the implementation of the schema."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("em",{parentName:"li"},"Properties"),": It is a user defined properties as a string/string map. Applications can use this bag for carrying any application specific logics. Possible properties\nmight be the Git hash associated with the schema, an environment string like ",(0,r.yg)("inlineCode",{parentName:"li"},"dev")," or ",(0,r.yg)("inlineCode",{parentName:"li"},"prod"),", etc.")),(0,r.yg)("p",null,"All the schemas are versioned with versions. So you can retrieve the schema definition of a given version if the version is not deleted."),(0,r.yg)("h3",{id:"upload-schema"},"Upload Schema"),(0,r.yg)("h4",{id:"pulsar-admin"},"pulsar-admin"),(0,r.yg)("p",null,"You can upload a new schema using the ",(0,r.yg)("a",{parentName:"p",href:"/docs/2.3.2/reference-pulsar-admin#get-5"},(0,r.yg)("inlineCode",{parentName:"a"},"upload"))," subcommand:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin schemas upload <topic-name> --filename /path/to/schema-definition-file\n\n")),(0,r.yg)("p",null,"The schema definition file should contain following json string on defining how the schema look like:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json"},'\n{\n    "type": "STRING",\n    "schema": "",\n    "properties": {\n        "key1" : "value1"\n    }\n}\n\n')),(0,r.yg)("p",null,"An example of the schema definition file can be found at ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/apache/pulsar/tree/master//conf/schema_example.conf"},"SchemaExample"),"."),(0,r.yg)("h4",{id:"rest"},"REST"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.3.2&apiversion=v2#operation/uploadSchema"},"POST /admin/v2/schemas/:tenant/:namespace/:topic/schema/uploadSchema")),(0,r.yg)("h3",{id:"get-schema"},"Get Schema"),(0,r.yg)("h4",{id:"pulsar-admin-1"},"pulsar-admin"),(0,r.yg)("p",null,"You can get the latest version of Schema using the ",(0,r.yg)("a",{parentName:"p",href:"/docs/2.3.2/reference-pulsar-admin#get-5"},(0,r.yg)("inlineCode",{parentName:"a"},"get"))," subcommand."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},'\n$ pulsar-admin schemas get <topic-name>\n{\n    "version": 0,\n    "type": "String",\n    "timestamp": 0,\n    "data": "string",\n    "properties": {\n        "property1": "string",\n        "property2": "string"\n    }\n}\n\n')),(0,r.yg)("p",null,"You can also retrieve the Schema of a given version by specifying ",(0,r.yg)("inlineCode",{parentName:"p"},"--version")," option."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin schemas get <topic-name> --version <version>\n\n")),(0,r.yg)("h4",{id:"rest-api"},"REST API"),(0,r.yg)("p",null,"Retrieve the latest version of the schema:"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.3.2&apiversion=v2#operation/getSchema"},"GET /admin/v2/schemas/:tenant/:namespace/:topic/schema/getSchema")),(0,r.yg)("p",null,"Retrieve the schema of a given version:"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.3.2&apiversion=v2#operation/getSchema"},"GET /admin/v2/schemas/:tenant/:namespace/:topic/schema/:version/getSchema")),(0,r.yg)("h3",{id:"delete-schema"},"Delete Schema"),(0,r.yg)("h4",{id:"pulsar-admin-2"},"pulsar-admin"),(0,r.yg)("p",null,"You can delete a schema using the ",(0,r.yg)("a",{parentName:"p",href:"/docs/2.3.2/reference-pulsar-admin#delete-8"},(0,r.yg)("inlineCode",{parentName:"a"},"delete"))," subcommand."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin schemas delete <topic-name>\n\n")),(0,r.yg)("h4",{id:"rest-api-1"},"REST API"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"https://pulsar.apache.org/admin-rest-api?version=2.3.2&apiversion=v2#operation/deleteSchema"},"DELETE /admin/v2/schemas/:tenant/:namespace/:topic/schema/deleteSchema")))}d.isMDXComponent=!0}}]);